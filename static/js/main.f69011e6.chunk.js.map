{"version":3,"sources":["data-base-methods/index.js","data-base-methods/data-base-methods.js","new-item-form/new-item-form.js","new-item-form/index.js","header/header.js","header/index.js","timer/timer.js","timer/index.js","item-content/index.js","item-content/item-content.js","item/item.js","item/index.js","items-list/items-list.js","items-list/index.js","items-filter/items-filter.js","items-filter/index.js","footer/footer.js","footer/index.js","app/app.js","app/index.js","index.js"],"names":["DataBaseMethods","id","text","done","createDate","Date","now","currentSessionStart","currentSession","totalSession","isActive","timerID","todos","this","createItemData","idx","findIndex","el","newTodo","newTodos","splice","change","filter","NewItemForm","state","newTodoLabel","onLabelChange","evt","setState","target","value","onSubmitNewTodo","preventDefault","addTodo","props","onSubmit","className","placeholder","onChange","React","Component","defaultProps","Header","Timer","slice","changeStatusTodo","minutes","Math","trunc","seconds","onClick","type","style","marginLeft","formatingTime","ItemContent","content","formatDistanceToNow","includeSeconds","Item","edit","startEditing","onEditing","editTodo","keyCode","removeTodo","classList","classNames","completed","editing","checked","onKeyDown","defaultValue","ItemsList","data","map","ItemsFilter","changeFilter","Footer","clearDone","countActive","App","currentId","dataBaseMethods","removeItem","editItem","addItem","changeStatusItem","checkActiveTimer","JSON","parse","localStorage","getItem","forEach","saveTodos","lastId","length","updateTimer","setInterval","setItem","stringify","clearInterval","renderData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f69011e6.chunk.js","sourcesContent":["import DataBaseMethods from './data-base-methods';\n\nexport default DataBaseMethods;\n","export default class DataBaseMethods {\n  createItemData(id, text) {\n    return {\n      id,\n      text,\n      done: false,\n      createDate: Date.now(),\n      currentSessionStart: null,\n      currentSession: 0,\n      totalSession: 0,\n      isActive: false,\n      timerID: null,\n    };\n  }\n\n  addItem(todos, id, text) {\n    return {\n      todos: [...todos, this.createItemData(id, text)],\n    };\n  }\n\n  editItem(todos, id, text) {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodo = { ...todos[idx], text };\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1, newTodo);\n    return {\n      todos: newTodos,\n    };\n  }\n\n  removeItem(todos, id) {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1);\n    return {\n      todos: newTodos,\n    };\n  }\n\n  changeStatusItem(todos, id, change) {\n    const idx = todos.findIndex((el) => el.id === id);\n    let newTodo;\n    if (change === 'done') {\n      newTodo = { ...todos[idx], done: !todos[idx].done };\n    } else if (change === 'startTimer') {\n      newTodo = todos[idx].isActive\n        ? { ...todos[idx] }\n        : { ...todos[idx], isActive: true, currentSessionStart: Date.now() };\n    } else if (change === 'stopTimer') {\n      newTodo = { ...todos[idx], isActive: false, totalSession: todos[idx].currentSession };\n    }\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1, newTodo);\n    return {\n      todos: newTodos,\n    };\n  }\n\n  clearDone(todos) {\n    const newTodos = todos.filter((el) => !el.done);\n    return {\n      todos: newTodos,\n    };\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NewItemForm extends React.Component {\n  static defaultProps = {\n    addTodo: () => {},\n  };\n\n  static propTypes = {\n    addTodo: PropTypes.func,\n  };\n\n  state = {\n    newTodoLabel: '',\n  };\n\n  onLabelChange = (evt) => {\n    this.setState({\n      newTodoLabel: evt.target.value,\n    });\n  };\n\n  onSubmitNewTodo = (evt) => {\n    evt.preventDefault();\n    const { addTodo } = this.props;\n    const { newTodoLabel } = this.state;\n    addTodo(newTodoLabel);\n    this.setState({\n      newTodoLabel: '',\n    });\n  };\n\n  render() {\n    const { newTodoLabel } = this.state;\n    return (\n      <form onSubmit={this.onSubmitNewTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onLabelChange}\n          value={newTodoLabel}\n        />\n      </form>\n    );\n  }\n}\n","import NewItemForm from './new-item-form';\n\nexport default NewItemForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NewItemForm from '../new-item-form';\n\nexport default function Header({ addTodo }) {\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n      <NewItemForm addTodo={(text) => addTodo(text)} />\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nHeader.propTypes = {\n  addTodo: PropTypes.func,\n};\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Timer extends React.Component {\n  static propTypes = {\n    changeStatusTodo: PropTypes.func.isRequired,\n    currentSession: PropTypes.number.isRequired,\n  };\n\n  formatingTime(value) {\n    return `0${value}`.slice(-2);\n  }\n\n  render() {\n    const { changeStatusTodo, currentSession } = this.props;\n    const minutes = Math.trunc(currentSession / 60);\n    const seconds = currentSession % 60;\n    return (\n      <span className=\"description\">\n        <button\n          onClick={() => changeStatusTodo('startTimer')}\n          className=\"icon icon-play\"\n          type=\"button\"\n          aria-label=\"Start timer\"\n        />\n        <button\n          onClick={() => changeStatusTodo('stopTimer')}\n          className=\"icon icon-pause\"\n          type=\"button\"\n          aria-label=\"Stop timer\"\n        />\n        <span style={{ marginLeft: 10 }}>\n          {this.formatingTime(minutes)}:{this.formatingTime(seconds)}\n        </span>\n      </span>\n    );\n  }\n}\n","import Timer from './timer';\n\nexport default Timer;\n","import ItemContent from './item-content';\n\nexport default ItemContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nimport Timer from '../timer';\n\nexport default function ItemContent({ id, content, createDate, changeStatusTodo, currentSession }) {\n  return (\n    <label>\n      <span className=\"title\">{content}</span>\n      <Timer id={id} currentSession={currentSession} changeStatusTodo={(change) => changeStatusTodo(change)} />\n      <span className=\"description\">{formatDistanceToNow(createDate, { includeSeconds: true })}</span>\n    </label>\n  );\n}\n\nItemContent.propTypes = {\n  content: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  createDate: PropTypes.number.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  currentSession: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ItemContent from '../item-content';\n\nexport default class Item extends React.Component {\n  static defaultProps = {\n    createDate: Date.now(),\n  };\n\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    done: PropTypes.bool.isRequired,\n    changeStatusTodo: PropTypes.func.isRequired,\n    removeTodo: PropTypes.func.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    createDate: PropTypes.number,\n    id: PropTypes.number.isRequired,\n    currentSession: PropTypes.number.isRequired,\n  };\n\n  state = {\n    edit: false,\n  };\n\n  startEditing = () => {\n    this.setState({ edit: true });\n  };\n\n  onEditing = (evt) => {\n    const { editTodo } = this.props;\n    if (evt.keyCode === 13) {\n      editTodo(evt.target.value);\n      this.setState({ edit: false });\n    } else if (evt.keyCode === 27) {\n      this.setState({ edit: false });\n    }\n  };\n\n  render() {\n    const { text, createDate, removeTodo, done, changeStatusTodo, id, currentSession } = this.props;\n    const { edit } = this.state;\n    const classList = classNames({\n      completed: done,\n      editing: edit,\n    });\n\n    return (\n      <li className={classList}>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" onChange={() => changeStatusTodo('done')} checked={done} />\n          <ItemContent\n            content={text}\n            createDate={createDate}\n            id={id}\n            currentSession={currentSession}\n            changeStatusTodo={(change) => changeStatusTodo(change)}\n          />\n          <button className=\"icon icon-edit\" onClick={this.startEditing} type=\"submit\" aria-label=\"Edit todo\" />\n          <button className=\"icon icon-destroy\" onClick={removeTodo} type=\"submit\" aria-label=\"Remove todo\" />\n        </div>\n        <input onKeyDown={this.onEditing} className=\"edit\" defaultValue={text} />\n      </li>\n    );\n  }\n}\n","import Item from './item';\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from '../item';\n\nexport default function ItemsList({ data, removeTodo, changeStatusTodo, editTodo }) {\n  const todos = data.map((el) => {\n    const { id } = el;\n    return (\n      <Item\n        key={id}\n        {...el}\n        removeTodo={() => removeTodo(id)}\n        changeStatusTodo={(change) => changeStatusTodo(id, change)}\n        editTodo={(text) => editTodo(id, text)}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{todos}</ul>;\n}\n\nItemsList.defaultProps = {\n  editTodo: () => {},\n  removeTodo: () => {},\n  changeStatusTodo: () => {},\n};\n\nItemsList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeTodo: PropTypes.func,\n  changeStatusTodo: PropTypes.func,\n  editTodo: PropTypes.func,\n};\n","import ItemsList from './items-list';\n\nexport default ItemsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ItemsFilter({ changeFilter, filter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button onClick={() => changeFilter('All')} className={filter === 'All' ? 'selected' : null} type=\"submit\">\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Active')}\n          className={filter === 'Active' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Completed')}\n          className={filter === 'Completed' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n  );\n}\n\nItemsFilter.defaultProps = {\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nItemsFilter.propTypes = {\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import ItemsFilter from './items-filter';\n\nexport default ItemsFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ItemsFilter from '../items-filter';\n\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{countActive} items left</span>\n      <ItemsFilter changeFilter={(filter) => changeFilter(filter)} filter={filter} />\n      <button className=\"clear-completed\" onClick={clearDone} type=\"submit\">\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.defaultProps = {\n  clearDone: () => {},\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nFooter.propTypes = {\n  countActive: PropTypes.number.isRequired,\n  clearDone: PropTypes.func,\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import Footer from './footer';\n\nexport default Footer;\n","import React from 'react';\nimport DataBaseMethods from '../data-base-methods';\nimport Header from '../header';\nimport ItemsList from '../items-list';\nimport Footer from '../footer';\n\nexport default class App extends React.Component {\n  currentId = 0;\n\n  dataBaseMethods = new DataBaseMethods();\n\n  state = {\n    todos: [],\n    filter: 'All',\n  };\n\n  componentDidMount() {\n    const saveTodos = JSON.parse(localStorage.getItem('todos'));\n    if (saveTodos) {\n      this.setState({ todos: saveTodos });\n      const lastId = saveTodos.length ? saveTodos[saveTodos.length - 1].id : 0;\n      this.currentId = lastId + 1;\n    }\n    this.updateTimer = setInterval(this.checkActiveTimer, 1000);\n  }\n\n  componentDidUpdate() {\n    const { todos } = this.state;\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateTimer);\n  }\n\n  removeTodo = (id) => {\n    this.setState(({ todos }) => this.dataBaseMethods.removeItem(todos, id));\n  };\n\n  editTodo = (id, text) => {\n    this.setState(({ todos }) => this.dataBaseMethods.editItem(todos, id, text));\n  };\n\n  addTodo = (text) => {\n    this.setState(({ todos }) => this.dataBaseMethods.addItem(todos, this.currentId, text));\n    this.currentId += 1;\n  };\n\n  changeStatusTodo = (id, change) => {\n    this.setState(({ todos }) => this.dataBaseMethods.changeStatusItem(todos, id, change));\n  };\n\n  clearDone = () => {\n    this.setState(({ todos }) => this.dataBaseMethods.clearDone(todos));\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  checkActiveTimer = () => {\n    const newTodos = JSON.parse(localStorage.getItem('todos'));\n    newTodos.forEach((el) => {\n      if (el.isActive) {\n        // eslint-disable-next-line no-param-reassign\n        el.currentSession = Math.trunc((Date.now() - el.currentSessionStart) / 1000) + el.totalSession;\n      }\n    });\n    this.setState({ todos: newTodos });\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const countActive = todos.filter((el) => !el.done).length;\n    const renderData =\n      // eslint-disable-next-line no-nested-ternary\n      filter === 'Active'\n        ? todos.filter((el) => !el.done)\n        : filter === 'Completed'\n        ? todos.filter((el) => el.done)\n        : todos;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={(text) => this.addTodo(text)} />\n        <section className=\"main\">\n          <ItemsList\n            data={renderData}\n            removeTodo={(id) => this.removeTodo(id)}\n            changeStatusTodo={this.changeStatusTodo}\n            editTodo={this.editTodo}\n          />\n          <Footer\n            clearDone={this.clearDone}\n            countActive={countActive}\n            changeFilter={this.changeFilter}\n            filter={filter}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './temp.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}