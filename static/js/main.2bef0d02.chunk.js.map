{"version":3,"sources":["new-task-form/new-task-form.js","new-task-form/index.js","header/index.js","header/header.js","task/task.js","task/index.js","task-list/index.js","task-list/task-list.js","tasks-filter/task-filter.js","footer/index.js","footer/footer.js","app/app.js","app/index.js","index.js"],"names":["NewTaskForm","state","newTodoLabel","onLabelChange","e","setState","target","value","onSubmitNewTodo","preventDefault","props","addTodo","onSubmit","this","className","placeholder","autoFocus","onChange","React","Component","Header","text","Task","edit","startEditing","createDate","removeTodo","done","doneTodo","checked","type","formatDistanceToNow","onClick","defaultValue","TaskList","data","todos","map","el","id","otherData","TaskFilter","changeFilter","filter","Footer","clearDone","countActive","App","currentId","Date","idx","findIndex","newTodos","splice","newTodo","now","renderData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bef0d02.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class NewTaskForm extends React.Component {\r\n\r\n    state = {\r\n        newTodoLabel: '',\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            newTodoLabel: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmitNewTodo = e => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.newTodoLabel)\r\n        this.setState({\r\n            newTodoLabel: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmitNewTodo}>\r\n                <input\r\n                    className='new-todo'\r\n                    placeholder=\"What needs to be done?\"\r\n                    autoFocus\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.newTodoLabel}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n};","import NewTaskForm from \"./new-task-form\";\r\n\r\nexport default NewTaskForm;","import Header from \"./header\";\r\n\r\nexport default Header;","import React from \"react\";\r\nimport NewTaskForm from \"../new-task-form\";\r\n\r\nexport default function Header({ addTodo }) {\r\n    return (\r\n        <header className='header'>\r\n            <h1>Todos</h1>\r\n            <NewTaskForm addTodo={text => addTodo(text)}/>\r\n        </header>\r\n    );\r\n};","import React from \"react\";\r\nimport {formatDistanceToNow} from \"date-fns\";\r\n\r\nexport default class Task extends React.Component {\r\n\r\n    state = {\r\n        edit: false,\r\n    }\r\n\r\n    startEditing = () => {\r\n        this.setState({\r\n            edit: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { text, createDate, removeTodo,\r\n                done, doneTodo } = this.props;\r\n        const { edit } = this.state;\r\n        let className = '';\r\n        let checked = false;\r\n        if (done) {\r\n            className += 'completed';\r\n            checked = true;\r\n        }\r\n        if (edit) className += 'editing';\r\n\r\n        return (\r\n            <li className={ className }>\r\n                <div className='view'>\r\n                    <input type=\"checkbox\"\r\n                           className='toggle'\r\n                           onChange={ doneTodo }\r\n                           checked={ checked }\r\n                    />\r\n                    <label>\r\n                        <span className='description'>\r\n                            { text }\r\n                        </span>\r\n                        <span className='created'>\r\n                            { formatDistanceToNow(createDate) }\r\n                        </span>\r\n                    </label>\r\n                    <button\r\n                        className='icon icon-edit'\r\n                        onClick={ this.startEditing } >\r\n                    </button>\r\n                    <button\r\n                        className='icon icon-destroy'\r\n                        onClick={ removeTodo } >\r\n                    </button>\r\n                </div>\r\n                <input className='edit'\r\n                       defaultValue={ text } />\r\n            </li>\r\n        )\r\n    };\r\n};","import Task from \"./task\";\r\n\r\nexport default Task;","import TaskList from \"./task-list\";\r\n\r\nexport default TaskList;","import React from \"react\";\r\nimport Task from \"../task\";\r\n\r\nexport default function TaskList({ data, removeTodo, doneTodo }) {\r\n\r\n    const todos = data.map(el => {\r\n        const {id, ...otherData} = el;\r\n        return <Task\r\n                    key={id} { ...otherData }\r\n                    removeTodo={() => removeTodo(id)}\r\n                    doneTodo={() => doneTodo(id)}\r\n               />\r\n    });\r\n\r\n    return (\r\n        <ul className='todo-list'>\r\n            { todos }\r\n        </ul>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function TaskFilter({ changeFilter, filter }){\r\n\r\n    return (\r\n        <ul className='filters'>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('All')}\r\n                    className={ filter === 'All' ? 'selected' : null}>\r\n                        All\r\n                </button>\r\n            </li>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('Active')}\r\n                    className={ filter === 'Active' ? 'selected' : null}>\r\n                        Active\r\n                </button>\r\n            </li>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('Completed')}\r\n                    className={ filter === 'Completed' ? 'selected' : null}>\r\n                        Completed\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};","import Footer from \"./footer\";\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport TaskFilter from \"../tasks-filter/task-filter\";\r\n\r\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\r\n    return (\r\n        <footer className='footer'>\r\n            <span className='todo-count'>\r\n                { countActive } items left\r\n            </span>\r\n            <TaskFilter\r\n                changeFilter={(filter) => changeFilter(filter)}\r\n                filter = { filter }\r\n            />\r\n            <button\r\n                className='clear-completed'\r\n                onClick={ clearDone }>\r\n                    Clear completed\r\n            </button>\r\n        </footer>\r\n    );\r\n};","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport TaskList from \"../task-list\";\r\nimport Footer from \"../footer\";\r\n\r\nexport default class App extends React.Component {\r\n    currentId = 1;\r\n\r\n    state = {\r\n        todos: [\r\n            {id: 0, text: 'Create new Task', done: false, createDate: new Date(2021, 10, 1, 2, 3)},\r\n        ],\r\n        filter: 'All',\r\n    };\r\n\r\n    removeTodo = (id) => {\r\n        this.setState(({ todos }) => {\r\n            const idx = todos.findIndex(el => el.id === id);\r\n            const newTodos = [...todos];\r\n            newTodos.splice(idx, 1)\r\n            return {\r\n                todos: newTodos,\r\n            }\r\n        })\r\n    }\r\n    addTodo = (text) => {\r\n        const newTodo = {\r\n            id: this.currentId++,\r\n            text,\r\n            done: false,\r\n            createDate: Date.now(),\r\n        };\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo],\r\n        });\r\n    }\r\n    doneTodo = (id) => {\r\n        this.setState(({ todos }) => {\r\n            const idx = todos.findIndex(el => el.id === id);\r\n            const newTodo = { ...todos[idx], done: !todos[idx].done};\r\n            const newTodos = [...todos];\r\n            newTodos.splice(idx, 1, newTodo);\r\n            return {\r\n                todos: newTodos,\r\n            }\r\n        });\r\n    }\r\n    clearDone = () => {\r\n        const newTodos = this.state.todos.filter(el => !el.done);\r\n        this.setState({\r\n            todos: newTodos,\r\n        })\r\n    }\r\n    changeFilter = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const { todos, filter } = this.state;\r\n        const countActive = todos.filter(el => !el.done).length;\r\n        let renderData;\r\n        switch (filter) {\r\n            case \"Active\":\r\n                renderData = todos.filter(el => !el.done);\r\n                break;\r\n            case \"Completed\":\r\n                renderData = todos.filter(el => el.done);;\r\n                break;\r\n            default:\r\n                renderData = todos;\r\n        }\r\n\r\n        return (\r\n            <section className='todoapp'>\r\n                <Header addTodo = { text => this.addTodo(text) }/>\r\n                <section className = 'main' >\r\n                    <TaskList\r\n                        data = { renderData }\r\n                        removeTodo = { (id) => this.removeTodo(id) }\r\n                        doneTodo = { this.doneTodo }\r\n                    />\r\n                    <Footer\r\n                        clearDone = { this.clearDone }\r\n                        countActive = { countActive }\r\n                        changeFilter = { this.changeFilter }\r\n                        filter = { filter }\r\n                    />\r\n                </section>\r\n            </section>\r\n        )\r\n    };\r\n};","import App from \"./app\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './temp.css'\nimport App from './app'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}