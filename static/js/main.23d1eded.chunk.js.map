{"version":3,"sources":["new-task-form/new-task-form.js","new-task-form/index.js","header/header.js","header/index.js","task/task.js","task/index.js","task-list/task-list.js","task-list/index.js","tasks-filter/task-filter.js","footer/footer.js","footer/index.js","app/app.js","app/index.js","index.js"],"names":["NewTaskForm","state","newTodoLabel","onLabelChange","evt","setState","target","value","onSubmitNewTodo","preventDefault","addTodo","props","this","onSubmit","className","placeholder","onChange","React","Component","defaultProps","Header","text","Task","edit","startEditing","onEditing","keyCode","editTodo","createDate","removeTodo","done","doneTodo","checked","type","formatDistanceToNow","includeSeconds","onClick","onKeyDown","defaultValue","Date","now","TaskList","data","todos","map","el","id","otherData","TaskFilter","changeFilter","filter","Footer","clearDone","countActive","App","currentId","idx","findIndex","newTodos","splice","newTodo","renderData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d1eded.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NewTaskForm extends React.Component {\n  static defaultProps = {\n    addTodo: () => {},\n  };\n\n  static propTypes = {\n    addTodo: PropTypes.func,\n  };\n\n  state = {\n    newTodoLabel: '',\n  };\n\n  onLabelChange = (evt) => {\n    this.setState({\n      newTodoLabel: evt.target.value,\n    });\n  };\n\n  onSubmitNewTodo = (evt) => {\n    evt.preventDefault();\n    const { addTodo } = this.props;\n    const { newTodoLabel } = this.state;\n    addTodo(newTodoLabel);\n    this.setState({\n      newTodoLabel: '',\n    });\n  };\n\n  render() {\n    const { newTodoLabel } = this.state;\n    return (\n      <form onSubmit={this.onSubmitNewTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onLabelChange}\n          value={newTodoLabel}\n        />\n      </form>\n    );\n  }\n}\n","import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NewTaskForm from '../new-task-form';\n\nexport default function Header({ addTodo }) {\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n      <NewTaskForm addTodo={(text) => addTodo(text)} />\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nHeader.propTypes = {\n  addTodo: PropTypes.func,\n};\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default class Task extends React.Component {\n  static defaultProps = {\n    createDate: Date.now(),\n    doneTodo: () => {},\n    removeTodo: () => {},\n    editTodo: () => {},\n  };\n\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    done: PropTypes.bool.isRequired,\n    doneTodo: PropTypes.func,\n    removeTodo: PropTypes.func,\n    editTodo: PropTypes.func,\n    createDate: PropTypes.number,\n  };\n\n  state = {\n    edit: false,\n  };\n\n  startEditing = () => {\n    this.setState({\n      edit: true,\n    });\n  };\n\n  onEditing = (evt) => {\n    if (evt.keyCode === 13) {\n      const { editTodo } = this.props;\n      editTodo(evt.target.value);\n      this.setState({ edit: false });\n    } else if (evt.keyCode === 27) {\n      this.setState({ edit: false });\n    }\n  };\n\n  render() {\n    const { text, createDate, removeTodo, done, doneTodo } = this.props;\n    const { edit } = this.state;\n    let className = '';\n    let checked = false;\n    if (done) {\n      className += 'completed';\n      checked = true;\n    }\n    if (edit) className += 'editing';\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" onChange={doneTodo} checked={checked} />\n          <label>\n            <span className=\"description\">{text}</span>\n            <span className=\"created\">{formatDistanceToNow(createDate, { includeSeconds: true })}</span>\n          </label>\n          <button className=\"icon icon-edit\" onClick={this.startEditing} type=\"submit\" aria-label=\"Edit todo\" />\n          <button className=\"icon icon-destroy\" onClick={removeTodo} type=\"submit\" aria-label=\"Remove todo\" />\n        </div>\n        <input onKeyDown={this.onEditing} className=\"edit\" defaultValue={text} />\n      </li>\n    );\n  }\n}\n","import Task from './task';\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from '../task';\n\nexport default function TaskList({ data, removeTodo, doneTodo, editTodo }) {\n  const todos = data.map((el) => {\n    const { id, ...otherData } = el;\n    return (\n      <Task\n        key={id}\n        {...otherData}\n        removeTodo={() => removeTodo(id)}\n        doneTodo={() => doneTodo(id)}\n        editTodo={(text) => editTodo(id, text)}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{todos}</ul>;\n}\n\nTaskList.defaultProps = {\n  editTodo: () => {},\n  removeTodo: () => {},\n  doneTodo: () => {},\n};\n\nTaskList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeTodo: PropTypes.func,\n  doneTodo: PropTypes.func,\n  editTodo: PropTypes.func,\n};\n","import TaskList from './task-list';\n\nexport default TaskList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function TaskFilter({ changeFilter, filter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button onClick={() => changeFilter('All')} className={filter === 'All' ? 'selected' : null} type=\"submit\">\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Active')}\n          className={filter === 'Active' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Completed')}\n          className={filter === 'Completed' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n  );\n}\n\nTaskFilter.defaultProps = {\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nTaskFilter.propTypes = {\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TaskFilter from '../tasks-filter/task-filter';\n\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{countActive} items left</span>\n      <TaskFilter changeFilter={(filter) => changeFilter(filter)} filter={filter} />\n      <button className=\"clear-completed\" onClick={clearDone} type=\"submit\">\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.defaultProps = {\n  clearDone: () => {},\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nFooter.propTypes = {\n  countActive: PropTypes.number.isRequired,\n  clearDone: PropTypes.func,\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import Footer from './footer';\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../header';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends React.Component {\n  currentId = 1;\n\n  state = {\n    todos: [{ id: 0, text: 'Create new Task', done: false, createDate: Date.now() }],\n    filter: 'All',\n  };\n\n  removeTodo = (id) => {\n    this.setState(({ todos }) => {\n      const idx = todos.findIndex((el) => el.id === id);\n      const newTodos = [...todos];\n      newTodos.splice(idx, 1);\n      return {\n        todos: newTodos,\n      };\n    });\n  };\n\n  editTodo = (id, text) => {\n    this.setState(({ todos }) => {\n      const idx = todos.findIndex((el) => el.id === id);\n      const newTodo = { ...todos[idx], text };\n      const newTodos = [...todos];\n      newTodos.splice(idx, 1, newTodo);\n      return {\n        todos: newTodos,\n      };\n    });\n  };\n\n  addTodo = (text) => {\n    const newTodo = {\n      id: this.currentId,\n      text,\n      done: false,\n      createDate: Date.now(),\n    };\n    this.currentId += 1;\n    const { todos } = this.state;\n    this.setState({\n      todos: [...todos, newTodo],\n    });\n  };\n\n  doneTodo = (id) => {\n    this.setState(({ todos }) => {\n      const idx = todos.findIndex((el) => el.id === id);\n      const newTodo = { ...todos[idx], done: !todos[idx].done };\n      const newTodos = [...todos];\n      newTodos.splice(idx, 1, newTodo);\n      return {\n        todos: newTodos,\n      };\n    });\n  };\n\n  clearDone = () => {\n    const { todos } = this.state;\n    const newTodos = todos.filter((el) => !el.done);\n    this.setState({\n      todos: newTodos,\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const countActive = todos.filter((el) => !el.done).length;\n    let renderData;\n    switch (filter) {\n      case 'Active':\n        renderData = todos.filter((el) => !el.done);\n        break;\n      case 'Completed':\n        renderData = todos.filter((el) => el.done);\n        break;\n      default:\n        renderData = todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={(text) => this.addTodo(text)} />\n        <section className=\"main\">\n          <TaskList\n            data={renderData}\n            removeTodo={(id) => this.removeTodo(id)}\n            doneTodo={this.doneTodo}\n            editTodo={this.editTodo}\n          />\n          <Footer\n            clearDone={this.clearDone}\n            countActive={countActive}\n            changeFilter={this.changeFilter}\n            filter={filter}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './temp.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}