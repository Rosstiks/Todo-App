{"version":3,"sources":["new-task-form/new-task-form.js","new-task-form/index.js","header/header.js","header/index.js","task/task.js","task/index.js","task-list/task-list.js","task-list/index.js","tasks-filter/task-filter.js","footer/footer.js","footer/index.js","app/app.js","app/index.js","index.js"],"names":["NewTaskForm","state","newTodoLabel","onLabelChange","e","setState","target","value","onSubmitNewTodo","preventDefault","props","addTodo","onSubmit","this","className","placeholder","autoFocus","onChange","React","Component","defaultProps","Header","text","propType","PropTypes","func","Task","edit","startEditing","createDate","removeTodo","done","doneTodo","checked","type","formatDistanceToNow","includeSeconds","onClick","defaultValue","Date","now","TaskList","data","todos","map","el","id","otherData","TaskFilter","changeFilter","filter","Footer","clearDone","countActive","App","currentId","idx","findIndex","newTodos","splice","newTodo","renderData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35c497b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class NewTaskForm extends React.Component {\r\n    static defaultProps = {\r\n        addTodo: () => {},\r\n    }\r\n\r\n    static propTypes = {\r\n        addTodo: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n        newTodoLabel: '',\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            newTodoLabel: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmitNewTodo = e => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.newTodoLabel)\r\n        this.setState({\r\n            newTodoLabel: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmitNewTodo}>\r\n                <input\r\n                    className='new-todo'\r\n                    placeholder=\"What needs to be done?\"\r\n                    autoFocus\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.newTodoLabel}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n};","import NewTaskForm from \"./new-task-form\";\r\n\r\nexport default NewTaskForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NewTaskForm from \"../new-task-form\";\r\n\r\nexport default function Header({ addTodo }) {\r\n    return (\r\n        <header className='header'>\r\n            <h1>Todos</h1>\r\n            <NewTaskForm addTodo={text => addTodo(text)}/>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    addTodo: () => {},\r\n}\r\n\r\nHeader.propType = {\r\n    addTodo: PropTypes.func,\r\n}","import Header from \"./header\";\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {formatDistanceToNow} from \"date-fns\";\r\n\r\nexport default class Task extends React.Component {\r\n    static defaultProps = {\r\n        createDate: Date.now(),\r\n        doneTodo: () => {},\r\n        removeTodo: () => {},\r\n    }\r\n\r\n    static propTypes = {\r\n        text: PropTypes.string.isRequired,\r\n        done: PropTypes.bool.isRequired,\r\n        doneTodo: PropTypes.func,\r\n        removeTodo: PropTypes.func,\r\n        createDate: PropTypes.number,\r\n    }\r\n\r\n    state = {\r\n        edit: false,\r\n    }\r\n\r\n    startEditing = () => {\r\n        this.setState({\r\n            edit: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { text, createDate, removeTodo,\r\n                done, doneTodo } = this.props;\r\n        const { edit } = this.state;\r\n        let className = '';\r\n        let checked = false;\r\n        if (done) {\r\n            className += 'completed';\r\n            checked = true;\r\n        }\r\n        if (edit) className += 'editing';\r\n\r\n        return (\r\n            <li className={ className }>\r\n                <div className='view'>\r\n                    <input type=\"checkbox\"\r\n                           className='toggle'\r\n                           onChange={ doneTodo }\r\n                           checked={ checked }\r\n                    />\r\n                    <label>\r\n                        <span className='description'>\r\n                            { text }\r\n                        </span>\r\n                        <span className='created'>\r\n                            { formatDistanceToNow(createDate, { includeSeconds: true }) }\r\n                        </span>\r\n                    </label>\r\n                    <button\r\n                        className='icon icon-edit'\r\n                        onClick={ this.startEditing } >\r\n                    </button>\r\n                    <button\r\n                        className='icon icon-destroy'\r\n                        onClick={ removeTodo } >\r\n                    </button>\r\n                </div>\r\n                <input className='edit'\r\n                       defaultValue={ text } />\r\n            </li>\r\n        )\r\n    };\r\n};","import Task from \"./task\";\r\n\r\nexport default Task;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Task from \"../task\";\r\n\r\nexport default function TaskList({ data, removeTodo, doneTodo }) {\r\n\r\n    const todos = data.map(el => {\r\n        const {id, ...otherData} = el;\r\n        return <Task\r\n                    key={id} { ...otherData }\r\n                    removeTodo={() => removeTodo(id)}\r\n                    doneTodo={() => doneTodo(id)}\r\n               />\r\n    });\r\n\r\n    return (\r\n        <ul className='todo-list'>\r\n            { todos }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTaskList.defaultProps = {\r\n    removeTodo: () => {},\r\n    doneTodo: () => {},\r\n}\r\n\r\nTaskList.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    removeTodo: PropTypes.func,\r\n    doneTodo: PropTypes.func,\r\n}","import TaskList from \"./task-list\";\r\n\r\nexport default TaskList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TaskFilter({ changeFilter, filter }){\r\n\r\n    return (\r\n        <ul className='filters'>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('All')}\r\n                    className={ filter === 'All' ? 'selected' : null}>\r\n                        All\r\n                </button>\r\n            </li>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('Active')}\r\n                    className={ filter === 'Active' ? 'selected' : null}>\r\n                        Active\r\n                </button>\r\n            </li>\r\n            <li>\r\n                <button\r\n                    onClick={() => changeFilter('Completed')}\r\n                    className={ filter === 'Completed' ? 'selected' : null}>\r\n                        Completed\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nTaskFilter.defaultProps = {\r\n    changeFilter: () => {},\r\n    filter: 'All',\r\n}\r\n\r\nTaskFilter.propTypes = {\r\n    changeFilter: PropTypes.func,\r\n    filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TaskFilter from \"../tasks-filter/task-filter\";\r\n\r\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\r\n    return (\r\n        <footer className='footer'>\r\n            <span className='todo-count'>\r\n                { countActive } items left\r\n            </span>\r\n            <TaskFilter\r\n                changeFilter={(filter) => changeFilter(filter)}\r\n                filter = { filter }\r\n            />\r\n            <button\r\n                className='clear-completed'\r\n                onClick={ clearDone }>\r\n                    Clear completed\r\n            </button>\r\n        </footer>\r\n    );\r\n};\r\n\r\nFooter.defaultProps = {\r\n    clearDone: () => {},\r\n    changeFilter: () => {},\r\n    filter: 'All',\r\n}\r\n\r\nFooter.propTypes = {\r\n    countActive: PropTypes.number.isRequired,\r\n    clearDone: PropTypes.func,\r\n    changeFilter: PropTypes.func,\r\n    filter: PropTypes.oneOf(['All', 'Completed', 'Active'])\r\n}","import Footer from \"./footer\";\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport TaskList from \"../task-list\";\r\nimport Footer from \"../footer\";\r\n\r\nexport default class App extends React.Component {\r\n    currentId = 1;\r\n\r\n    state = {\r\n        todos: [\r\n            {id: 0, text: 'Create new Task', done: false, createDate: Date.now()},\r\n        ],\r\n        filter: 'All',\r\n    };\r\n\r\n    removeTodo = (id) => {\r\n        this.setState(({ todos }) => {\r\n            const idx = todos.findIndex(el => el.id === id);\r\n            const newTodos = [...todos];\r\n            newTodos.splice(idx, 1)\r\n            return {\r\n                todos: newTodos,\r\n            }\r\n        })\r\n    }\r\n    addTodo = (text) => {\r\n        const newTodo = {\r\n            id: this.currentId++,\r\n            text,\r\n            done: false,\r\n            createDate: Date.now(),\r\n        };\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo],\r\n        });\r\n    }\r\n    doneTodo = (id) => {\r\n        this.setState(({ todos }) => {\r\n            const idx = todos.findIndex(el => el.id === id);\r\n            const newTodo = { ...todos[idx], done: !todos[idx].done};\r\n            const newTodos = [...todos];\r\n            newTodos.splice(idx, 1, newTodo);\r\n            return {\r\n                todos: newTodos,\r\n            }\r\n        });\r\n    }\r\n    clearDone = () => {\r\n        const newTodos = this.state.todos.filter(el => !el.done);\r\n        this.setState({\r\n            todos: newTodos,\r\n        })\r\n    }\r\n    changeFilter = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const { todos, filter } = this.state;\r\n        const countActive = todos.filter(el => !el.done).length;\r\n        let renderData;\r\n        switch (filter) {\r\n            case \"Active\":\r\n                renderData = todos.filter(el => !el.done);\r\n                break;\r\n            case \"Completed\":\r\n                renderData = todos.filter(el => el.done);;\r\n                break;\r\n            default:\r\n                renderData = todos;\r\n        }\r\n\r\n        return (\r\n            <section className='todoapp'>\r\n                <Header addTodo = { text => this.addTodo(text) }/>\r\n                <section className = 'main' >\r\n                    <TaskList\r\n                        data = { renderData }\r\n                        removeTodo = { (id) => this.removeTodo(id) }\r\n                        doneTodo = { this.doneTodo }\r\n                    />\r\n                    <Footer\r\n                        clearDone = { this.clearDone }\r\n                        countActive = { countActive }\r\n                        changeFilter = { this.changeFilter }\r\n                        filter = { filter }\r\n                    />\r\n                </section>\r\n            </section>\r\n        )\r\n    };\r\n};","import App from \"./app\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './temp.css'\nimport App from './app'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}