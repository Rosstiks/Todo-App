{"version":3,"sources":["components/new-item-form/index.js","components/new-item-form/new-item-form.js","components/header/index.js","components/header/header.js","components/timer/index.js","components/timer/timer.js","components/item/item.js","components/item/index.js","components/items-list/index.js","components/items-list/items-list.js","components/items-filter/items-filter.js","components/items-filter/index.js","components/footer/footer.js","components/footer/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["NewItemForm","addTodo","useState","min","setMin","sec","setSec","text","setText","className","onSubmit","evt","preventDefault","name","placeholder","onChange","target","value","required","type","max","hidden","Header","timeout","Timer","active","setActive","timeLeft","setTimeLeft","timerId","setTimerId","formatingTime","slice","useEffect","clearInterval","clearTimeout","minutes","Math","trunc","seconds","fontColor","onClick","setInterval","time","style","marginLeft","color","Item","props","createDate","removeTodo","done","changeStatusTodo","id","currentTab","editTodo","editing","setEditing","classList","classNames","completed","display","checked","formatDistanceToNow","includeSeconds","onKeyDown","keyCode","defaultValue","defaultProps","Date","now","ItemsList","data","todos","map","el","ItemsFilter","changeFilter","filter","Footer","clearDone","countActive","App","setTodos","setFilter","currentId","setCurrentId","createNewTodo","idx","findIndex","editingTodo","undefined","newTodos","splice","length","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e175b50.chunk.js","sourcesContent":["import NewItemForm from './new-item-form';\n\nexport default NewItemForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function NewItemForm({ addTodo }) {\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [text, setText] = useState('');\n\n  const submitNewTodo = (evt) => {\n    evt.preventDefault();\n    const timeout = (min * 60 || 0) + (+sec || 0);\n    addTodo(text, timeout);\n    setMin('');\n    setSec('');\n    setText('');\n  };\n\n  return (\n    <form className=\"new-todo-form\" onSubmit={submitNewTodo}>\n      <input\n        name=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onChange={(evt) => setText(evt.target.value)}\n        value={text}\n        required\n      />\n      <input\n        name=\"min\"\n        type=\"number\"\n        min=\"0\"\n        max=\"59\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Min\"\n        onChange={(evt) => setMin(evt.target.value)}\n        value={min}\n      />\n      <input\n        name=\"sec\"\n        type=\"number\"\n        min=\"0\"\n        max=\"59\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Sec\"\n        onChange={(evt) => setSec(evt.target.value)}\n        value={sec}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nNewItemForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NewItemForm from '../new-item-form';\n\nexport default function Header({ addTodo }) {\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n      <NewItemForm addTodo={(text, timeout) => addTodo(text, timeout)} />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import Timer from './timer';\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Timer({ timeout }) {\n  const [active, setActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [timerId, setTimerId] = useState(null);\n  useEffect(() => setTimeLeft(timeout), [timeout]);\n  useEffect(() => {\n    if (!timeLeft) {\n      clearInterval(timerId);\n      setActive(false);\n    }\n  }, [timeLeft, timerId]);\n  useEffect(() => () => clearTimeout(timerId), [timerId]);\n\n  const stopTimer = () => {\n    if (active) {\n      clearInterval(timerId);\n      setActive(false);\n    }\n  };\n\n  const startTimer = () => {\n    if (!active) {\n      setTimerId(setInterval(() => setTimeLeft((time) => time - 1), 1000));\n      setActive(true);\n    }\n  };\n\n  function formatingTime(value) {\n    return `0${value}`.slice(-2);\n  }\n\n  const minutes = Math.trunc(timeLeft / 60);\n  const seconds = timeLeft % 60;\n  const fontColor = timeLeft ? 'gray' : 'red';\n\n  return (\n    <span className=\"description\">\n      <button onClick={startTimer} className=\"icon icon-play\" type=\"button\" aria-label=\"Start timer\" />\n      <button onClick={stopTimer} className=\"icon icon-pause\" type=\"button\" aria-label=\"Stop timer\" />\n      <span style={{ marginLeft: 10, color: fontColor }}>\n        {formatingTime(minutes)}:{formatingTime(seconds)}\n      </span>\n    </span>\n  );\n}\n\nTimer.propTypes = {\n  timeout: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { formatDistanceToNow } from 'date-fns';\nimport Timer from '../timer';\n\nexport default function Item(props) {\n  const { text, createDate, removeTodo, done, changeStatusTodo, id, timeout, currentTab, editTodo } = props;\n  const [editing, setEditing] = useState(false);\n\n  const onEditing = (evt) => {\n    if (evt.keyCode === 13) {\n      editTodo(evt.target.value);\n      setEditing(false);\n    } else if (evt.keyCode === 27) {\n      setEditing(false);\n    }\n  };\n\n  const classList = classNames({\n    completed: done,\n    editing,\n  });\n  let display = 'block';\n  if ((done && currentTab === 'Active') || (!done && currentTab === 'Completed')) display = 'none';\n\n  return (\n    <li className={classList} style={{ display }}>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" onChange={() => changeStatusTodo('done')} checked={done} />\n        <label>\n          <span className=\"title\">{text}</span>\n          <Timer id={id} timeout={timeout} />\n          <span className=\"description\">{formatDistanceToNow(createDate, { includeSeconds: true })}</span>\n        </label>\n        <button className=\"icon icon-edit\" onClick={() => setEditing(true)} type=\"submit\" aria-label=\"Edit todo\" />\n        <button className=\"icon icon-destroy\" onClick={removeTodo} type=\"submit\" aria-label=\"Remove todo\" />\n      </div>\n      <input onKeyDown={onEditing} className=\"edit\" defaultValue={text} />\n    </li>\n  );\n}\n\nItem.propTypes = {\n  text: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  createDate: PropTypes.number,\n  id: PropTypes.number.isRequired,\n  timeout: PropTypes.number.isRequired,\n  currentTab: PropTypes.string.isRequired,\n};\n\nItem.defaultProps = {\n  createDate: Date.now(),\n};\n","import Item from './item';\n\nexport default Item;\n","import ItemsList from './items-list';\n\nexport default ItemsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from '../item';\n\nexport default function ItemsList({ data, removeTodo, changeStatusTodo, editTodo, currentTab }) {\n  const todos = data.map((el) => {\n    const { id } = el;\n    return (\n      <Item\n        currentTab={currentTab}\n        key={id}\n        {...el}\n        removeTodo={() => removeTodo(id)}\n        changeStatusTodo={() => changeStatusTodo(id)}\n        editTodo={(text) => editTodo(id, text)}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{todos}</ul>;\n}\n\nItemsList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  currentTab: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ItemsFilter({ changeFilter, filter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button onClick={() => changeFilter('All')} className={filter === 'All' ? 'selected' : null} type=\"submit\">\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Active')}\n          className={filter === 'Active' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Completed')}\n          className={filter === 'Completed' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n  );\n}\n\nItemsFilter.defaultProps = {\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nItemsFilter.propTypes = {\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import ItemsFilter from './items-filter';\n\nexport default ItemsFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemsFilter from '../items-filter';\n\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{countActive} items left</span>\n      <ItemsFilter changeFilter={(filter) => changeFilter(filter)} filter={filter} />\n      <button className=\"clear-completed\" onClick={clearDone} type=\"submit\">\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.defaultProps = {\n  clearDone: () => {},\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nFooter.propTypes = {\n  countActive: PropTypes.number.isRequired,\n  clearDone: PropTypes.func,\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import Footer from './footer';\n\nexport default Footer;\n","import App from './app';\n\nexport default App;\n","import React, { useState } from 'react';\nimport Header from '../header';\nimport ItemsList from '../items-list';\nimport Footer from '../footer';\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const [currentId, setCurrentId] = useState(0);\n\n  const createNewTodo = (id, text, timeout) => ({\n    id,\n    text,\n    done: false,\n    timeout,\n    createDate: Date.now(),\n  });\n  const addTodo = (text, timeout) => {\n    setTodos([...todos, createNewTodo(currentId, text, timeout || 60)]);\n    setCurrentId((current) => current + 1);\n  };\n  const removeTodo = (id) => setTodos(todos.filter((el) => el.id !== id));\n  const editTodo = (id, text) => {\n    const idx = todos.findIndex((el) => el.id === id);\n    const editingTodo = text !== undefined ? { ...todos[idx], text } : { ...todos[idx], done: !todos[idx].done };\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1, editingTodo);\n    setTodos(newTodos);\n  };\n  const clearDoneTodo = () => setTodos(todos.filter((el) => !el.done));\n  const countActive = todos.filter((el) => !el.done).length;\n\n  return (\n    <section className=\"todoapp\">\n      <Header addTodo={addTodo} />\n      <section className=\"main\">\n        <ItemsList\n          currentTab={filter}\n          data={todos}\n          removeTodo={removeTodo}\n          changeStatusTodo={editTodo}\n          editTodo={editTodo}\n        />\n        <Footer clearDone={clearDoneTodo} countActive={countActive} changeFilter={setFilter} filter={filter} />\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}