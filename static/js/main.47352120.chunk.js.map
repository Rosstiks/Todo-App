{"version":3,"sources":["utils/data-base-methods/index.js","utils/data-base-methods/data-base-methods.js","components/new-item-form/index.js","components/new-item-form/new-item-form.js","components/header/index.js","components/header/header.js","components/timer/index.js","components/timer/timer.js","components/item/item.js","components/item/index.js","components/items-list/index.js","components/items-list/items-list.js","components/items-filter/items-filter.js","components/items-filter/index.js","components/footer/footer.js","components/footer/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["DataBaseMethods","id","text","timeout","done","createDate","Date","now","todos","this","createItemData","idx","findIndex","el","newTodo","newTodos","splice","filter","NewItemForm","addTodo","useState","min","setMin","sec","setSec","setText","className","onSubmit","evt","preventDefault","name","placeholder","onChange","target","value","required","type","max","hidden","Header","Timer","active","setActive","timeLeft","setTimeLeft","timerId","setTimerId","formatingTime","slice","useEffect","clearInterval","clearTimeout","minutes","Math","trunc","seconds","fontColor","onClick","setInterval","time","style","marginLeft","color","Item","props","removeTodo","changeStatusTodo","currentTab","editTodo","editing","setEditing","classList","classNames","completed","display","checked","formatDistanceToNow","includeSeconds","onKeyDown","keyCode","defaultValue","defaultProps","ItemsList","data","map","ItemsFilter","changeFilter","Footer","clearDone","countActive","App","methods","setTodos","setFilter","currentId","setCurrentId","length","addItem","current","removeItem","change","changeStatusItem","editItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47352120.chunk.js","sourcesContent":["import DataBaseMethods from './data-base-methods';\n\nexport default DataBaseMethods;\n","export default class DataBaseMethods {\n  createItemData(id, text, timeout) {\n    return {\n      id,\n      text,\n      done: false,\n      timeout,\n      createDate: Date.now(),\n    };\n  }\n\n  addItem(todos, id, text, timeout) {\n    return [...todos, this.createItemData(id, text, timeout || 60)];\n  }\n\n  editItem(todos, id, text) {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodo = { ...todos[idx], text };\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1, newTodo);\n    return newTodos;\n  }\n\n  removeItem(todos, id) {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1);\n    return newTodos;\n  }\n\n  changeStatusItem(todos, id) {\n    const idx = todos.findIndex((el) => el.id === id);\n    const newTodo = { ...todos[idx], done: !todos[idx].done };\n    const newTodos = [...todos];\n    newTodos.splice(idx, 1, newTodo);\n    return newTodos;\n  }\n\n  clearDone(todos) {\n    const newTodos = todos.filter((el) => !el.done);\n    return newTodos;\n  }\n}\n","import NewItemForm from './new-item-form';\n\nexport default NewItemForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function NewItemForm({ addTodo }) {\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [text, setText] = useState('');\n\n  const submitNewTodo = (evt) => {\n    evt.preventDefault();\n    const timeout = (min * 60 || 0) + (+sec || 0);\n    addTodo(text, timeout);\n    setMin('');\n    setSec('');\n    setText('');\n  };\n\n  return (\n    <form className=\"new-todo-form\" onSubmit={submitNewTodo}>\n      <input\n        name=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onChange={(evt) => setText(evt.target.value)}\n        value={text}\n        required\n      />\n      <input\n        name=\"min\"\n        type=\"number\"\n        min=\"0\"\n        max=\"59\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Min\"\n        onChange={(evt) => setMin(evt.target.value)}\n        value={min}\n      />\n      <input\n        name=\"sec\"\n        type=\"number\"\n        min=\"0\"\n        max=\"59\"\n        className=\"new-todo-form__timer\"\n        placeholder=\"Sec\"\n        onChange={(evt) => setSec(evt.target.value)}\n        value={sec}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nNewItemForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NewItemForm from '../new-item-form';\n\nexport default function Header({ addTodo }) {\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n      <NewItemForm addTodo={(text, timeout) => addTodo(text, timeout)} />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import Timer from './timer';\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Timer({ timeout }) {\n  const [active, setActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [timerId, setTimerId] = useState(null);\n  useEffect(() => setTimeLeft(timeout), [timeout]);\n  useEffect(() => {\n    if (!timeLeft) {\n      clearInterval(timerId);\n      setActive(false);\n    }\n  }, [timeLeft, timerId]);\n  useEffect(() => () => clearTimeout(timerId), [timerId]);\n\n  const stopTimer = () => {\n    if (active) {\n      clearInterval(timerId);\n      setActive(false);\n    }\n  };\n\n  const startTimer = () => {\n    if (!active) {\n      setTimerId(setInterval(() => setTimeLeft((time) => time - 1), 1000));\n      setActive(true);\n    }\n  };\n\n  function formatingTime(value) {\n    return `0${value}`.slice(-2);\n  }\n\n  const minutes = Math.trunc(timeLeft / 60);\n  const seconds = timeLeft % 60;\n  const fontColor = timeLeft ? 'gray' : 'red';\n\n  return (\n    <span className=\"description\">\n      <button onClick={startTimer} className=\"icon icon-play\" type=\"button\" aria-label=\"Start timer\" />\n      <button onClick={stopTimer} className=\"icon icon-pause\" type=\"button\" aria-label=\"Stop timer\" />\n      <span style={{ marginLeft: 10, color: fontColor }}>\n        {formatingTime(minutes)}:{formatingTime(seconds)}\n      </span>\n    </span>\n  );\n}\n\nTimer.propTypes = {\n  timeout: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { formatDistanceToNow } from 'date-fns';\nimport Timer from '../timer';\n\nexport default function Item(props) {\n  const { text, createDate, removeTodo, done, changeStatusTodo, id, timeout, currentTab, editTodo } = props;\n  const [editing, setEditing] = useState(false);\n\n  const onEditing = (evt) => {\n    if (evt.keyCode === 13) {\n      editTodo(evt.target.value);\n      setEditing(false);\n    } else if (evt.keyCode === 27) {\n      setEditing(false);\n    }\n  };\n\n  const classList = classNames({\n    completed: done,\n    editing,\n  });\n  let display = 'block';\n  if ((done && currentTab === 'Active') || (!done && currentTab === 'Completed')) display = 'none';\n\n  return (\n    <li className={classList} style={{ display }}>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" onChange={() => changeStatusTodo('done')} checked={done} />\n        <label>\n          <span className=\"title\">{text}</span>\n          <Timer id={id} timeout={timeout} />\n          <span className=\"description\">{formatDistanceToNow(createDate, { includeSeconds: true })}</span>\n        </label>\n        <button className=\"icon icon-edit\" onClick={() => setEditing(true)} type=\"submit\" aria-label=\"Edit todo\" />\n        <button className=\"icon icon-destroy\" onClick={removeTodo} type=\"submit\" aria-label=\"Remove todo\" />\n      </div>\n      <input onKeyDown={onEditing} className=\"edit\" defaultValue={text} />\n    </li>\n  );\n}\n\nItem.propTypes = {\n  text: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  createDate: PropTypes.number,\n  id: PropTypes.number.isRequired,\n  timeout: PropTypes.number.isRequired,\n  currentTab: PropTypes.string.isRequired,\n};\n\nItem.defaultProps = {\n  createDate: Date.now(),\n};\n","import Item from './item';\n\nexport default Item;\n","import ItemsList from './items-list';\n\nexport default ItemsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from '../item';\n\nexport default function ItemsList({ data, removeTodo, changeStatusTodo, editTodo, currentTab }) {\n  const todos = data.map((el) => {\n    const { id } = el;\n    return (\n      <Item\n        currentTab={currentTab}\n        key={id}\n        {...el}\n        removeTodo={() => removeTodo(id)}\n        changeStatusTodo={() => changeStatusTodo(id)}\n        editTodo={(text) => editTodo(id, text)}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{todos}</ul>;\n}\n\nItemsList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  currentTab: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ItemsFilter({ changeFilter, filter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button onClick={() => changeFilter('All')} className={filter === 'All' ? 'selected' : null} type=\"submit\">\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Active')}\n          className={filter === 'Active' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => changeFilter('Completed')}\n          className={filter === 'Completed' ? 'selected' : null}\n          type=\"submit\"\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n  );\n}\n\nItemsFilter.defaultProps = {\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nItemsFilter.propTypes = {\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import ItemsFilter from './items-filter';\n\nexport default ItemsFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemsFilter from '../items-filter';\n\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{countActive} items left</span>\n      <ItemsFilter changeFilter={(filter) => changeFilter(filter)} filter={filter} />\n      <button className=\"clear-completed\" onClick={clearDone} type=\"submit\">\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.defaultProps = {\n  clearDone: () => {},\n  changeFilter: () => {},\n  filter: 'All',\n};\n\nFooter.propTypes = {\n  countActive: PropTypes.number.isRequired,\n  clearDone: PropTypes.func,\n  changeFilter: PropTypes.func,\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\n};\n","import Footer from './footer';\n\nexport default Footer;\n","import App from './app';\n\nexport default App;\n","import React, { useState } from 'react';\nimport DataBaseMethods from '../../utils/data-base-methods';\nimport Header from '../header';\nimport ItemsList from '../items-list';\nimport Footer from '../footer';\n\nexport default function App() {\n  const methods = new DataBaseMethods();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const [currentId, setCurrentId] = useState(0);\n\n  const removeTodo = (id) => setTodos((todos) => methods.removeItem(todos, id));\n  const editTodo = (id, text) => setTodos((todos) => methods.editItem(todos, id, text));\n  const addTodo = (text, timeout) => {\n    setTodos((todos) => methods.addItem(todos, currentId, text, timeout));\n    setCurrentId((current) => current + 1);\n  };\n  const changeStatusTodo = (id, change) => setTodos((todos) => methods.changeStatusItem(todos, id, change));\n  const clearDoneTodo = () => setTodos((todos) => methods.clearDone(todos));\n  const countActive = todos.filter((el) => !el.done).length;\n\n  return (\n    <section className=\"todoapp\">\n      <Header addTodo={addTodo} />\n      <section className=\"main\">\n        <ItemsList\n          currentTab={filter}\n          data={todos}\n          removeTodo={removeTodo}\n          changeStatusTodo={changeStatusTodo}\n          editTodo={editTodo}\n        />\n        <Footer clearDone={clearDoneTodo} countActive={countActive} changeFilter={setFilter} filter={filter} />\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}