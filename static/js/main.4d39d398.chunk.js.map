{"version":3,"sources":["new-task-form/new-task-form.js","new-task-form/index.js","header/header.js","header/index.js","task/task.js","task/index.js","task-list/task-list.js","task-list/index.js","tasks-filter/task-filter.js","footer/footer.js","footer/index.js","app/app.js","app/index.js","index.js"],"names":["NewTaskForm","state","newTodoLabel","onLabelChange","evt","setState","target","value","onSubmitNewTodo","preventDefault","addTodo","props","this","onSubmit","className","placeholder","onChange","React","Component","defaultProps","Header","text","Task","edit","startEditing","onEditing","keyCode","editTodo","createDate","removeTodo","done","doneTodo","classList","classNames","type","checked","formatDistanceToNow","includeSeconds","onClick","onKeyDown","defaultValue","Date","now","TaskList","data","todos","map","el","id","otherData","TaskFilter","changeFilter","filter","Footer","clearDone","countActive","App","currentId","idx","findIndex","newTodos","splice","newTodo","renderData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d39d398.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewTaskForm extends React.Component {\r\n  static defaultProps = {\r\n    addTodo: () => {},\r\n  };\r\n\r\n  static propTypes = {\r\n    addTodo: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    newTodoLabel: '',\r\n  };\r\n\r\n  onLabelChange = (evt) => {\r\n    this.setState({\r\n      newTodoLabel: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmitNewTodo = (evt) => {\r\n    evt.preventDefault();\r\n    const { addTodo } = this.props;\r\n    const { newTodoLabel } = this.state;\r\n    addTodo(newTodoLabel);\r\n    this.setState({\r\n      newTodoLabel: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { newTodoLabel } = this.state;\r\n    return (\r\n      <form onSubmit={this.onSubmitNewTodo}>\r\n        <input\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          onChange={this.onLabelChange}\r\n          value={newTodoLabel}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import NewTaskForm from './new-task-form';\r\n\r\nexport default NewTaskForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NewTaskForm from '../new-task-form';\r\n\r\nexport default function Header({ addTodo }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Todos</h1>\r\n      <NewTaskForm addTodo={(text) => addTodo(text)} />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  addTodo: () => {},\r\n};\r\n\r\nHeader.propTypes = {\r\n  addTodo: PropTypes.func,\r\n};\r\n","import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames'\r\n\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nexport default class Task extends React.Component {\r\n  static defaultProps = {\r\n    createDate: Date.now(),\r\n    doneTodo: () => {},\r\n    removeTodo: () => {},\r\n    editTodo: () => {},\r\n  };\r\n\r\n  static propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    done: PropTypes.bool.isRequired,\r\n    doneTodo: PropTypes.func,\r\n    removeTodo: PropTypes.func,\r\n    editTodo: PropTypes.func,\r\n    createDate: PropTypes.number,\r\n  };\r\n\r\n  state = {\r\n    edit: false,\r\n  };\r\n\r\n  startEditing = () => {\r\n    this.setState({\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  onEditing = (evt) => {\r\n    if (evt.keyCode === 13) {\r\n      const { editTodo } = this.props;\r\n      editTodo(evt.target.value);\r\n      this.setState({ edit: false });\r\n    } else if (evt.keyCode === 27) {\r\n      this.setState({ edit: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, createDate, removeTodo, done, doneTodo } = this.props;\r\n    const { edit } = this.state;\r\n    const classList = classNames({\r\n      'completed': done,\r\n      'editing': edit,\r\n    })\r\n\r\n    return (\r\n      <li className={classList}>\r\n        <div className=\"view\">\r\n          <input type=\"checkbox\" className=\"toggle\" onChange={doneTodo} checked={done} />\r\n          <label>\r\n            <span className=\"description\">{text}</span>\r\n            <span className=\"created\">{formatDistanceToNow(createDate, { includeSeconds: true })}</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\" onClick={this.startEditing} type=\"submit\" aria-label=\"Edit todo\" />\r\n          <button className=\"icon icon-destroy\" onClick={removeTodo} type=\"submit\" aria-label=\"Remove todo\" />\r\n        </div>\r\n        <input onKeyDown={this.onEditing} className=\"edit\" defaultValue={text} />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import Task from './task';\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from '../task';\r\n\r\nexport default function TaskList({ data, removeTodo, doneTodo, editTodo }) {\r\n  const todos = data.map((el) => {\r\n    const { id, ...otherData } = el;\r\n    return (\r\n      <Task\r\n        key={id}\r\n        {...otherData}\r\n        removeTodo={() => removeTodo(id)}\r\n        doneTodo={() => doneTodo(id)}\r\n        editTodo={(text) => editTodo(id, text)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"todo-list\">{todos}</ul>;\r\n}\r\n\r\nTaskList.defaultProps = {\r\n  editTodo: () => {},\r\n  removeTodo: () => {},\r\n  doneTodo: () => {},\r\n};\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  removeTodo: PropTypes.func,\r\n  doneTodo: PropTypes.func,\r\n  editTodo: PropTypes.func,\r\n};\r\n","import TaskList from './task-list';\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TaskFilter({ changeFilter, filter }) {\r\n  return (\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <button onClick={() => changeFilter('All')} className={filter === 'All' ? 'selected' : null} type=\"submit\">\r\n          All\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          onClick={() => changeFilter('Active')}\r\n          className={filter === 'Active' ? 'selected' : null}\r\n          type=\"submit\"\r\n        >\r\n          Active\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          onClick={() => changeFilter('Completed')}\r\n          className={filter === 'Completed' ? 'selected' : null}\r\n          type=\"submit\"\r\n        >\r\n          Completed\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nTaskFilter.defaultProps = {\r\n  changeFilter: () => {},\r\n  filter: 'All',\r\n};\r\n\r\nTaskFilter.propTypes = {\r\n  changeFilter: PropTypes.func,\r\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TaskFilter from '../tasks-filter/task-filter';\r\n\r\nexport default function Footer({ clearDone, countActive, changeFilter, filter }) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">{countActive} items left</span>\r\n      <TaskFilter changeFilter={(filter) => changeFilter(filter)} filter={filter} />\r\n      <button className=\"clear-completed\" onClick={clearDone} type=\"submit\">\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nFooter.defaultProps = {\r\n  clearDone: () => {},\r\n  changeFilter: () => {},\r\n  filter: 'All',\r\n};\r\n\r\nFooter.propTypes = {\r\n  countActive: PropTypes.number.isRequired,\r\n  clearDone: PropTypes.func,\r\n  changeFilter: PropTypes.func,\r\n  filter: PropTypes.oneOf(['All', 'Completed', 'Active']),\r\n};\r\n","import Footer from './footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from '../header';\r\nimport TaskList from '../task-list';\r\nimport Footer from '../footer';\r\n\r\nexport default class App extends React.Component {\r\n  currentId = 1;\r\n\r\n  state = {\r\n    todos: [{ id: 0, text: 'Create new Task', done: false, createDate: Date.now() }],\r\n    filter: 'All',\r\n  };\r\n\r\n  removeTodo = (id) => {\r\n    this.setState(({ todos }) => {\r\n      const idx = todos.findIndex((el) => el.id === id);\r\n      const newTodos = [...todos];\r\n      newTodos.splice(idx, 1);\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    });\r\n  };\r\n\r\n  editTodo = (id, text) => {\r\n    this.setState(({ todos }) => {\r\n      const idx = todos.findIndex((el) => el.id === id);\r\n      const newTodo = { ...todos[idx], text };\r\n      const newTodos = [...todos];\r\n      newTodos.splice(idx, 1, newTodo);\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    });\r\n  };\r\n\r\n  addTodo = (text) => {\r\n    const newTodo = {\r\n      id: this.currentId,\r\n      text,\r\n      done: false,\r\n      createDate: Date.now(),\r\n    };\r\n    this.currentId += 1;\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: [...todos, newTodo],\r\n    });\r\n  };\r\n\r\n  doneTodo = (id) => {\r\n    this.setState(({ todos }) => {\r\n      const idx = todos.findIndex((el) => el.id === id);\r\n      const newTodo = { ...todos[idx], done: !todos[idx].done };\r\n      const newTodos = [...todos];\r\n      newTodos.splice(idx, 1, newTodo);\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    });\r\n  };\r\n\r\n  clearDone = () => {\r\n    const { todos } = this.state;\r\n    const newTodos = todos.filter((el) => !el.done);\r\n    this.setState({\r\n      todos: newTodos,\r\n    });\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todos, filter } = this.state;\r\n    const countActive = todos.filter((el) => !el.done).length;\r\n    let renderData;\r\n    switch (filter) {\r\n      case 'Active':\r\n        renderData = todos.filter((el) => !el.done);\r\n        break;\r\n      case 'Completed':\r\n        renderData = todos.filter((el) => el.done);\r\n        break;\r\n      default:\r\n        renderData = todos;\r\n    }\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <Header addTodo={(text) => this.addTodo(text)} />\r\n        <section className=\"main\">\r\n          <TaskList\r\n            data={renderData}\r\n            removeTodo={(id) => this.removeTodo(id)}\r\n            doneTodo={this.doneTodo}\r\n            editTodo={this.editTodo}\r\n          />\r\n          <Footer\r\n            clearDone={this.clearDone}\r\n            countActive={countActive}\r\n            changeFilter={this.changeFilter}\r\n            filter={filter}\r\n          />\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './temp.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}